package HomeWork1;

import java.util.Arrays;

public class BitwiseOperators {
    public static void main(String[] args) {
        int a=42; int c=-42; int k=-42;
        int b=15; int d=-15; int g=0;


        System.out.println("42= " + Integer.toBinaryString(a));
        System.out.println("15= " + Integer.toBinaryString(b));

        System.out.println("-42= " + Integer.toBinaryString(c));
        System.out.println("-15= " + Integer.toBinaryString(d));

        System.out.println("~42= " + ~a); // 42 = 00101010, ~42 = 11111111111111111111111111010101
        g=~a;
        //System.out.println(Integer.toBinaryString(g));

        System.out.println("~15= " + ~b); // 15 = 00001111, ~15 = 11111111111111111111111111110000
        g=~b;
        //System.out.println(Integer.toBinaryString(g));

        System.out.println("42&15= " + (a&b)); // 00101010 & 00001111 = 00001010 (в десятичной системе будет 10)
        System.out.println("'42&=15'= " + (a&=b)); // 00101010 &= 00001111 = 00001010 (и переменной a присвоится значение 00001010)

        a=42;
        System.out.println("42|15= " + (a|b)); // 00101010 | 00001111 = 00101111 (в десятичной системе будет 47)

        System.out.println("'42|=15'= " + (a|=b)); // 00101010 |= 00001111 = 00101111 (и переменной a присвоится значение 00101111)

        a=42;
        System.out.println("42^15= " + (a^b)); // 00101010 ^ 00001111 = 00100101 (в десятичной системе будет 37)

        System.out.println("'42^=15'= " + (a^=b)); //  00101010 ^= 00001111 = 00100101 (и переменной a присвоится значение 00100101)

        a=42;
        System.out.println("42>>15= " + (a>>b)); // 00101010 >> 00001111 означает что нужно 00101010 сдвинуть на 15 битов вправо, результат операции 00000000

        System.out.println("'42>>=15'= " + (a>>=b)); // 00101010 >>= 00001111 означает что нужно 00101010 сдвинуть на 15 битов вправо и переменной a присвоится значение 00000000

        a=42;
        System.out.println("42>>>15= " + (a>>>b)); // 00101010 >>> 00001111, результатом будет 0
        //System.out.println(Integer.toBinaryString(a>>>b));


        System.out.println("42<<15= " + (a<<b)); // 00101010 << 00001111, результатом будет 101010000000000000000
        //System.out.println(Integer.toBinaryString(a<<b));


        System.out.println("'42<<=15'= " + (a<<=b)); // 00101010 << 00001111, результатом будет 101010000000000000000 и a будет равна 101010000000000000000

        a=42;
        System.out.println("'42>>>=15'= " + (a>>>=b)); //  00101010 >>> 00001111, результатом будет 0 и a будет равняться 0

        a=42;
        System.out.println("~(-42)= " + ~c); // ~11111111111111111111111111010110 = 101001
        g=~c;
        //System.out.println(Integer.toBinaryString(g));

        System.out.println("~(-15)= " + ~d); // ~11111111111111111111111111110001 = 1110
        g=~d;
        //System.out.println(Integer.toBinaryString(g));

        System.out.println("(-42)&(-15)= " + (c&d)); // 11111111111111111111111111010110 & 11111111111111111111111111110001 = 11111111111111111111111111010000
        //System.out.println(Integer.toBinaryString(c&d));

        System.out.println("'(-42)&=(-15)'= " + (c&=d)); // 11111111111111111111111111010110 &= 11111111111111111111111111110001 = 11111111111111111111111111010000, переменной c присваивается значение 11111111111111111111111111010110

        //System.out.println(k);
        System.out.println("(-42)|(-15)= " + (k|d)); // 1111111111111111111111111010110 | 11111111111111111111111111110001 = 11111111111111111111111111110111
        //System.out.println(Integer.toBinaryString(k|d));

        System.out.println("'(-42)|=(-15)'= " + (c|=d)); // 1111111111111111111111111010110 | 11111111111111111111111111110001 = 11111111111111111111111111110111, переменной к присваивается значение 11111111111111111111111111110111

        k=-42;
        //System.out.println(k);
        System.out.println("(-42)^(-15)= " + (k^d)); // 1111111111111111111111111010110 ^ 11111111111111111111111111110001 = 100111
        //System.out.println(Integer.toBinaryString(k^d));


        System.out.println("'(-42)^=(-15)'= " + (k^=d)); // 1111111111111111111111111010110 ^ 11111111111111111111111111110001 = 100111, k= 100111

        k=-42;
        System.out.println("(-42)>>(-15)= " + (k>>d)); // 1111111111111111111111111010110 >> 11111111111111111111111111110001 = 11111111111111111111111111111111
        //System.out.println(Integer.toBinaryString(k>>d));

        System.out.println("'(-42)>>=(-15)'= " + (k>>=d));  // 1111111111111111111111111010110 >>= 11111111111111111111111111110001 = 11111111111111111111111111111111, k = 11111111111111111111111111111111

        k=-42;
        System.out.println("(-42)>>>(-15)= " + (k>>>d)); // 11111111111111111111111111010110 >>> 11111111111111111111111111110001 результатом будет 111111111111111
        //System.out.println(Integer.toBinaryString(k>>>d));

        System.out.println("(-42)<<(-15)= " + (k<<d)); // 11111111111111111111111111010110 << 11111111111111111111111111110001 результатом будет 11111111101011000000000000000000
        //System.out.println(Integer.toBinaryString(k<<d));

        k=-42;
        System.out.println("'(-42)<<=(-15)'= " + (k<<=d)); //11111111111111111111111111010110 <<= 11111111111111111111111111110001 резуьтатом будет 11111111101011000000000000000000 (также переменной k присвоится значение 11111111101011000000000000000000)
        //System.out.println(Integer.toBinaryString(k));

        k=-42;
        System.out.println("'(-42)>>>=(-15)'= " + (k>>>=d)); // 11111111111111111111111111010110 >>>= 11111111111111111111111111110001 результатом будет 111111111111111 (также переменной k присвоится значение 111111111111111)
        //System.out.println(Integer.toBinaryString(k));

    }
}
